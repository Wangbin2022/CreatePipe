<Window x:Class="CreatePipe.Form.CableTraySystemTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter ="clr-namespace:CreatePipe.Utils"
        xmlns:local="clr-namespace:CreatePipe.Form"
        xmlns:vm="clr-namespace:CreatePipe.models"
        xmlns:model="clr-namespace:CreatePipe.models"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance Type=vm:CableTraySystemViewModel}"
        Title="CableTraySystemTest" Height="450" Width="720">
    <Window.Resources>
        <converter:ColorConvertHelper x:Key="colorConverter"/>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <TextBox Width="200" VerticalAlignment="Center"  
                     Text="{Binding Keyword,UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding QueryELementCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <TextBlock Text="{Binding CableTrayCount,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
            <Button Width="66" Margin="2" Content="增加系统" Command="{Binding AddSystemCommand}"/>
            <Button Width="66" Margin="2" Content="删除系统" Command="{Binding DeleteELementCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=dataGrid}"/>
        </StackPanel>
        <StackPanel  Grid.Row="1">
            <DataGrid x:Name="dataGrid" RowHeight="35"  
                     HorizontalAlignment="Stretch"
                     AutoGenerateColumns="False" CanUserAddRows="False"
                     SelectionUnit="FullRow" EnableColumnVirtualization="False"
                     GridLinesVisibility="None" Height="350"  Width="auto"
                     SelectionMode="Extended" ItemsSource="{Binding CableSystemEntitys}">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell" x:Key="dataGridCellStyle">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Lightblue"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <TextBlock TextAlignment="Center" >
            <ContentPresenter />
                                    </TextBlock>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="TextVerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.CellStyle>
                    <StaticResource ResourceKey="dataGridCellStyle"/>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名称" Width="80" SortMemberPath="SystemName" 
  Binding="{Binding SystemName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="缩写" Width="35" SortMemberPath="Abbreviation" CanUserResize="False"
                      Binding="{Binding Abbreviation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="类型" Width="35" SortMemberPath="SystemCategory" CanUserResize="False"
                      Binding="{Binding SystemCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="数量统计" Width="50" SortMemberPath="SingleSystemElementCount" 
                    Binding="{Binding SingleSystemElementCount}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTemplateColumn Header="线颜色" Width="80"
                                            SortMemberPath="ColorName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button  BorderBrush="Transparent" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.SetLineColorCommand}" CommandParameter="{Binding }" Background="Transparent">
                                    <TextBlock Text="{Binding ColorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"    Foreground="{Binding LineColor,Converter={StaticResource colorConverter}}" VerticalAlignment="Center"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="线宽" Width="45">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox ItemsSource="{Binding LineWeights}" 
                          SelectedValue="{Binding SelectedLineWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="线型" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="cb_Type"      ItemsSource="{Binding LinePatternElementInfos}"        DisplayMemberPath="Name"  SelectedItem="{Binding LinePatternElem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="材质颜色" Width="80"
SortMemberPath="Name" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button  BorderBrush="Transparent"  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.SetLineColorCommand}" CommandParameter = "{Binding }" Background="{Binding LineColor,Converter={StaticResource colorConverter}}">
                                    <TextBlock Text="{Binding ColorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="Black"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="透明度" Width="45">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox ItemsSource="{Binding TransparencySamples}"   SelectedValue="{Binding TransparencyNum,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28" IsEditable="False"
                                />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="过滤器选择" Width="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox SelectedValue="{Binding FilterName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
      ItemsSource="{Binding FilterNames}" VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="设置操作" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="确认并设置" Width="auto" Command="{Binding DataContext.ApplySetupCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <DockPanel Grid.Row="2">
            <Button  Content="确定并退出" Height="20" x:Name="btn_OK"
                     HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
        </DockPanel>
    </Grid>
</Window>
