<Window x:Class="CreatePipe.Form.ViewTemplateManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CreatePipe.Form"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:vm="clr-namespace:CreatePipe"
        xmlns:Form="clr-namespace:CreatePipe.Form"
        mc:Ignorable="d"
        Title="ViewTemplateManagerView" Height="450" Width="720"
        WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize">
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3.5*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid Grid.ColumnSpan="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBox Width="200" VerticalAlignment="Center"  
                     Text="{Binding Keyword,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding QueryELementCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock Text="{Binding ViewTemplateCount,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                <Button Width="80" Margin="2" Content="删除视图样板" Command="{Binding DeleteELementCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=dataGrid}"/>
            </StackPanel>
        </Grid>
        <StackPanel  Grid.Row="1">
            <DataGrid x:Name="dataGrid" RowHeight="30"  
                     HorizontalAlignment="Stretch"
                     AutoGenerateColumns="False" CanUserAddRows="False"
                     SelectionUnit="FullRow" EnableColumnVirtualization="False"
                     GridLinesVisibility="None" Height="335"  Width="auto"
                     SelectionMode="Extended" ItemsSource="{Binding ViewTemplates}" SelectedItem="{Binding SelectedView}"
                     vm:ViewTemplateManagerViewModel.AttProp="True">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell" x:Key="dataGridCellStyle">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Lightblue"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <TextBlock TextAlignment="Center" >
            <ContentPresenter />
                                    </TextBlock>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="TextVerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.CellStyle>
                    <StaticResource ResourceKey="dataGridCellStyle"/>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名称" Width="120" SortMemberPath="ViewName" 
  Binding="{Binding ViewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="应用" Width="36" SortMemberPath="Num" 
  Binding="{Binding Num}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="视图类型" Width="60" SortMemberPath="ViewType" 
  Binding="{Binding ViewType}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="规程" Width="35" SortMemberPath="ViewDiscipline" 
  Binding="{Binding ViewDiscipline}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="比例" Width="50" SortMemberPath="Scale" 
  Binding="{Binding Scale}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTemplateColumn Header="显示样式" Width="66" SortMemberPath="ViewDetail" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="cb_Type"      ItemsSource="{Binding ViewDisplay}"          SelectedItem="{Binding ViewDisplayElem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="显示细节" Width="66" SortMemberPath="ViewDetail" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="cb_Type"      ItemsSource="{Binding ViewDetails}"          SelectedItem="{Binding ViewDetailElem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="设置操作" CanUserResize="False" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="查找视图" Width="auto" Command="{Binding DataContext.FindViewsCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" IsEnabled="{Binding hasView}"
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <!--<ListBox Margin="5" Grid.Row="0"/>-->
            <StackPanel Grid.Row="0" >
                <TextBlock Margin="5" Text="{Binding RowCount, StringFormat='Selected Items: {0}'}" />
                <Form:MultiSelectListBox Margin="5" IsEnabled="{Binding EnableCategoryList}"  Height="300" Width="145"
                                     ItemsSource="{Binding DataContext.SelectedView.CategoryItems,RelativeSource={RelativeSource AncestorType=Window}}" SelectedItems="{Binding SelectedItems}" />
            </StackPanel>
            <Button x:Name="btn_Paste" Content="将样板应用到指定视图" Grid.Row="1"  Margin="5" 
                                      Command="{Binding ApplyToViewCommand}" CommandParameter="{Binding SelectedItems}"
                Click="btn_OK_Click"/>
        </Grid>
        <DockPanel Grid.Row="2" Grid.ColumnSpan="2">
            <Button  Content="确定并退出" Height="20" x:Name="btn_OK"
                     HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
        </DockPanel>
    </Grid>
</Window>
