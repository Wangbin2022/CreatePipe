<Window x:Class="CreatePipe.Form.EvacRouteManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CreatePipe.Form"
        mc:Ignorable="d"
        Title="EvacRouteManagerView" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Height="450" Width="720"  Topmost="True"
        WindowStartupLocation="Manual" Left="30" Top="300" ResizeMode="CanMinimize"
        xmlns:vc="clr-namespace:CreatePipe.Utils.ValueConverter"
        xmlns:bv="clr-namespace:CreatePipe.Form.Behaviors">
    <Grid>
        <Grid.Resources>
            <vc:IntToStringConverter x:Key="IntToStringConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        <Grid  >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBox Width="230"  Margin="5"
  bv:TextBoxBehavior.TextChangedCommand="{Binding QueryElementCommand}" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock Text="{Binding AllRoutes.Count,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToStringConverter}}" VerticalAlignment="Center"/>
                <Button Width="80" Margin="5" Content="选择所有实例" Command="{Binding PickRoutesCommand}"/>
                <Button Width="80" Margin="5" Content="删除所有实例" Command="{Binding DeleteElementsCommand}"
                        CommandParameter="{Binding SelectedItems, ElementName=dataGrid}"/>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="1" >
            <DataGrid x:Name="dataGrid" RowHeight="30"  Margin="5"
               HorizontalAlignment="Stretch"
               AutoGenerateColumns="False" CanUserAddRows="False"
               SelectionUnit="FullRow" EnableColumnVirtualization="False"
               GridLinesVisibility="None" Width="auto" Height="325"
               SelectionMode="Extended" ItemsSource="{Binding AllRoutes}">
                <DataGrid.Resources>
                    <Style x:Key="TextVerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style x:Key="TextVerticalArea" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名称" Width="145" SortMemberPath="entityName" 
  Binding="{Binding entityName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="楼层" Width="45" SortMemberPath="levelName" 
  Binding="{Binding levelName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="长度" Width="60" SortMemberPath="totalLength" 
  Binding="{Binding totalLength, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="True" ElementStyle="{StaticResource TextVerticalArea}"/>
                    <DataGridTemplateColumn Header="选择对象" CanUserResize="False" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="PickThis" Width="auto" Command="{Binding DataContext.PickRouteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="穿房间" Width="45" SortMemberPath="IntersectRooms" 
  Binding="{Binding IntersectRooms, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="True" ElementStyle="{StaticResource TextVerticalArea}"/>
                    <DataGridTextColumn Header="穿墙" Width="35" SortMemberPath="IntersectWalls" 
  Binding="{Binding IntersectWalls, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="True" ElementStyle="{StaticResource TextVerticalArea}"/>
                    <DataGridTextColumn Header="最小门宽" Width="60" SortMemberPath="MinimalDoorWidth" 
  Binding="{Binding MinimalDoorWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
IsReadOnly="True" ElementStyle="{StaticResource TextVerticalArea}"/>
                    <DataGridTemplateColumn Header="穿门距离" CanUserResize="False" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Detail" Width="auto" Command="{Binding DataContext.IntersectDoorDistanceCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>                      
        </StackPanel>
        <DockPanel Grid.Row="2" >
            <Button  Content="放置并退出" Margin="5"
                     HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
        </DockPanel>
    </Grid>
</Window>
