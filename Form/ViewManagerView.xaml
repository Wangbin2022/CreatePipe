<Window x:Class="CreatePipe.Form.ViewManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CreatePipe.Form"
        mc:Ignorable="d"
        Title="视图管理器" Height="450" Width="720"
       Topmost="True"
       WindowStartupLocation="Manual" Left="30" Top="300" ResizeMode="CanMinimize"
       xmlns:vc="clr-namespace:CreatePipe.Utils.ValueConverter"
       xmlns:bv="clr-namespace:CreatePipe.Form.Behaviors">
    <Grid Margin="5">
        <Grid.Resources>
            <vc:IntToStringConverter x:Key="IntToStringConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        <Grid  >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBox Width="230"  Margin="5"
  bv:TextBoxBehavior.TextChangedCommand="{Binding QueryElementCommand}" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock Text="{Binding AllViews.Count,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToStringConverter}}" VerticalAlignment="Center"/>
                <Button Width="80" Margin="5" Content="新建标高视图" Command="{Binding NewLevelViewCommand}" Click="btn_OK_Click"/>
                <Button Width="80" Margin="5" Content="删除样板过滤" Command="{Binding RemoveViewTemplateCommand}"
                        CommandParameter="{Binding SelectedItems, ElementName=dataGrid}" Click="btn_OK_Click"/>
                <Button Width="80" Margin="5" Content="删除选中视图" Command="{Binding DeleteElementsCommand}"
                        CommandParameter="{Binding SelectedItems, ElementName=dataGrid}"/>
            </StackPanel>
        </Grid>
        <StackPanel  Grid.Row="1">
            <DataGrid x:Name="dataGrid" RowHeight="30"  Margin="5"
                     HorizontalAlignment="Stretch"
                     AutoGenerateColumns="False" CanUserAddRows="False"
                     SelectionUnit="FullRow" EnableColumnVirtualization="False"
                     GridLinesVisibility="None" Width="auto" Height="325"
                     SelectionMode="Extended" ItemsSource="{Binding AllViews}">
                <DataGrid.Resources>
                    <Style x:Key="TextVerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名称" Width="120" SortMemberPath="ViewName" 
  Binding="{Binding ViewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
IsReadOnly="False" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTemplateColumn Header="样板" Width="35"
                                        SortMemberPath="hasTemplate" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" >
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path= hasTemplate}" Value="False">
                                                    <Setter Property="Text"  Value="无">
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Red">
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path= hasTemplate}" Value="True">
                                                    <Setter Property="Text"  Value="有">
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Green">
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="视图类型" Width="60" SortMemberPath="ViewType" 
Binding="{Binding ViewType}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="标高" Width="35" SortMemberPath="LevelName" 
Binding="{Binding LevelName}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="规程" Width="35" SortMemberPath="ViewDiscipline" 
Binding="{Binding ViewDiscipline}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTextColumn Header="比例" Width="45" SortMemberPath="Scale" 
Binding="{Binding Scale}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTemplateColumn Header="显示样式" Width="60" SortMemberPath="ViewDetail" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="cb_Type"      ItemsSource="{Binding ViewDisplay}"          SelectedItem="{Binding ViewDisplayElem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="显示细节" Width="60" SortMemberPath="ViewDetail" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="cb_Type"      ItemsSource="{Binding ViewDetails}"          SelectedItem="{Binding ViewDetailElem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalContentAlignment="Center" Height="28"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="布图" Width="35"
                      SortMemberPath="hasSheet" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" >
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path= hasSheet}" Value="False">
                                                    <Setter Property="Text"  Value="无">
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Red">
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path= hasSheet}" Value="True">
                                                    <Setter Property="Text"  Value="有">
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Green">
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="过滤器" Width="35" SortMemberPath="viewFilterCount" 
Binding="{Binding viewFilterCount}" IsReadOnly="True" ElementStyle="{StaticResource TextVerticalCenter}"/>
                    <DataGridTemplateColumn Header="转向操作" CanUserResize="False" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="转向视图" Width="auto" Command="{Binding DataContext.FindViewCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch" 
                                        Click="btn_OK_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="设置操作" CanUserResize="False" Width="66">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="删除视图" Width="auto" Command="{Binding DataContext.DeleteViewCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
CommandParameter="{Binding }" Height="28" HorizontalAlignment="Stretch"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <DockPanel Grid.Row="2" >
            <Button  Content="确定并退出" Margin="5" x:Name="btn_OK"
                     HorizontalAlignment="Stretch" Click="btn_OK_Click"/>
        </DockPanel>
    </Grid>
</Window>
